{"remainingRequest":"/home/teshu/git/searching/node_modules/babel-loader/lib/index.js!/home/teshu/git/searching/node_modules/eslint-loader/index.js??ref--13-0!/home/teshu/git/searching/src/router.js","dependencies":[{"path":"/home/teshu/git/searching/src/router.js","mtime":1584285733641},{"path":"/home/teshu/git/searching/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/teshu/git/searching/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/teshu/git/searching/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL3Rlc2h1L2dpdC9zZWFyY2hpbmcvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBSb3V0ZXIgZnJvbSAndnVlLXJvdXRlcic7CmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKVnVlLnVzZShSb3V0ZXIpOwp2YXIgcm91dGVyID0gbmV3IFJvdXRlcih7CiAgbW9kZTogJ2hpc3RvcnknLAogIGJhc2U6IHByb2Nlc3MuZW52LkJBU0VfVVJMLAogIHJvdXRlczogW3sKICAgIHBhdGg6ICcvbG9naW4nLAogICAgY29tcG9uZW50OiBQdWJsaWMsCiAgICBjaGlsZHJlbjogW3sKICAgICAgcGF0aDogJy9sb2dpbicsCiAgICAgIG5hbWU6ICdsb2dpbicsCiAgICAgIGNvbXBvbmVudDogZnVuY3Rpb24gY29tcG9uZW50KCkgewogICAgICAgIHJldHVybiBpbXBvcnQoJycpOwogICAgICB9IC8vICAgbWV0YTogeyBpc1B1YmxpYzogdHJ1ZSB9CgogICAgfV0KICB9XQp9KTsKcm91dGVyLmJlZm9yZUVhY2goIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUodG8sIGZyb20sIG5leHQpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgaWYgKCEodG8ubWV0YS5pc1B1YmxpYyA9PT0gdHJ1ZSkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgbmV4dCgpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIC8vIEFsbCBvdGhlciBwYWdlcyBzaG91bGQgcGFzcyBvbmx5IHdoZW4gdGhlIHVzZXIgaXMgbG9nZ2VkIGluCiAgICAgICAgICAgIGlmIChzdG9yZS5zdGF0ZS51c2VyLmlzTG9nZ2VkSW4pIHsKICAgICAgICAgICAgICBuZXh0KCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgICBuYW1lOiAnbG9naW4nCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwoKICByZXR1cm4gZnVuY3Rpb24gKF94LCBfeDIsIF94MykgewogICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICB9Owp9KCkpOwpleHBvcnQgZGVmYXVsdCByb3V0ZXI7"},{"version":3,"sources":["/home/teshu/git/searching/src/router.js"],"names":["Vue","Router","store","use","router","mode","base","process","env","BASE_URL","routes","path","component","Public","children","name","beforeEach","to","from","next","meta","isPublic","state","user","isLoggedIn"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,MAAR;AAEA,IAAMG,MAAM,GAAG,IAAIH,MAAJ,CAAW;AACxBI,EAAAA,IAAI,EAAE,SADkB;AAExBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFM;AAGxBC,EAAAA,MAAM,EAAE,CACN;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,SAAS,EAAEC,MAFb;AAGEC,IAAAA,QAAQ,EAAE,CACR;AACEH,MAAAA,IAAI,EAAE,QADR;AAEEI,MAAAA,IAAI,EAAE,OAFR;AAGEH,MAAAA,SAAS,EAAE;AAAA,eAAM,OAAO,EAAP,CAAN;AAAA,OAHb,CAIA;;AAJA,KADQ;AAHZ,GADM;AAHgB,CAAX,CAAf;AAoBAR,MAAM,CAACY,UAAP;AAAA,qEAAkB,iBAAOC,EAAP,EAAWC,IAAX,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEbF,EAAE,CAACG,IAAH,CAAQC,QAAR,KAAqB,IAFR;AAAA;AAAA;AAAA;;AAGdF,YAAAA,IAAI;AAHU;;AAAA;AAOhB;AACA,gBAAGjB,KAAK,CAACoB,KAAN,CAAYC,IAAZ,CAAiBC,UAApB,EAA+B;AAC7BL,cAAAA,IAAI;AACL,aAFD,MAEO;AACLA,cAAAA,IAAI,CAAC;AAACJ,gBAAAA,IAAI,EAAE;AAAP,eAAD,CAAJ;AACD;;AAZe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;;AAAA;AAAA;AAAA;AAAA;AAgBA,eAAeX,MAAf","sourcesContent":["import Vue from 'vue'\nimport Router from 'vue-router'\n\nimport store from '@/store';\n\nVue.use(Router)\n\nconst router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  routes: [\n    {\n      path: '/login',\n      component: Public,\n      children: [\n        {\n          path: '/login',\n          name: 'login',\n          component: () => import(''),\n        //   meta: { isPublic: true }\n        }\n    ]\n    }\n  ]\n});\n\n\nrouter.beforeEach(async (to, from, next) => {\n  // Allow pages that don't require authentication\n  if(to.meta.isPublic === true){\n    next();\n    return;\n  }\n\n  // All other pages should pass only when the user is logged in\n  if(store.state.user.isLoggedIn){\n    next();\n  } else {\n    next({name: 'login'});\n  }\n});\n\n\nexport default router;"]}]}